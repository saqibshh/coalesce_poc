{#
    Copyright (c) 2023 Coalesce. All rights reserved.
This script and its associated documentation are confidential and proprietary to Coalesce.
Unauthorized reproduction, distribution, or disclosure of this material is strictly prohibited.
Coalesce permits you to copy and modify this script for the purposes of using with Coalsce but
does not permit copying or modification for any other purpose.  
#}
{# == Node Type Version        : 1  == #}
{# == Node Type Name           : Show Output == #}
{# == Node Type Description    : This node simply shows the output of the upstream node == #}
{#Release date:20250109 Version:1.0.0#}

{# Storage Location-database and schema #}
{% set srcSchName = node.location.name %}
{% set db = storageLocations | selectattr('name', 'equalto', srcSchName) | map(attribute='database') | first %}
{% set sch = storageLocations | selectattr('name', 'equalto', srcSchName) | map(attribute='schema') | first %}

{# Use upstream source #}
{% set sourceDb = sources[0].location.database %}
{% set sourceSch = sources[0].location.schema %}
{% set sourceTable = sources[0].name %}

{# Main query #}
{% if config.materializationType == 'view' %}
    {{ stage('Create Show Output View') }}
    
    CREATE OR REPLACE VIEW "{{ db }}"."{{ sch }}"."{{ node.name }}" AS
{% else %}
    {{ stage('Create Show Output Table') }}
    
    {% if config.materializationType == 'transient table' %}
        CREATE OR REPLACE TRANSIENT TABLE "{{ db }}"."{{ sch }}"."{{ node.name }}" AS
    {% else %}
        CREATE OR REPLACE TABLE "{{ db }}"."{{ sch }}"."{{ node.name }}" AS
    {% endif %}
{% endif %}

SELECT 
    {% if config.includeRowNumbers %}
        ROW_NUMBER() OVER (ORDER BY 1) AS ROW_NUMBER,
    {% endif %}
    {% for col in sources[0].columns %}
        "{{ col.name }}"
        {%- if not loop.last -%}, {% endif %}
    {%- endfor %}
FROM {{ sourceDb }}.{{ sourceSch }}.{{ sourceTable }}
{% if config.limitRows and config.limitRows != "0" and config.limitRows != "" %}
    LIMIT {{ config.limitRows }}
{% endif %};
