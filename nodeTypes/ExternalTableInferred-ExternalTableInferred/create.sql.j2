{#
    Copyright (c) 2023 Coalesce. All rights reserved.
This script and its associated documentation are confidential and proprietary to Coalesce.
Unauthorized reproduction, distribution, or disclosure of this material is strictly prohibited.
Coalesce permits you to copy and modify this script for the purposes of using with Coalsce but
does not permit copying or modification for any other purpose.  
#}
{# == Node Type Version        : 1  == #}
{# == Node Type Name           : Azure External Table with Flattening == #}
{# == Node Type Description    : Standalone external table that connects to Azure, flattens VARIANT data == #}
{#Release date:20250109 Version:1.0.0#}

{# Storage Location-database and schema #}
{% set srcSchName = node.location.name %}
{% set db = storageLocations | selectattr('name', 'equalto', srcSchName) | map(attribute='database') | first %}
{% set sch = storageLocations | selectattr('name', 'equalto', srcSchName) | map(attribute='schema') | first %}

{# Parse external table location #}
{% set externalTableParts = config.externalTableLocation.split('.') %}
{% set extDb = externalTableParts[0] %}
{% set extSch = externalTableParts[1] %}
{% set extTable = externalTableParts[2] %}

{# Create initial placeholder table - will be replaced during run #}
{{ stage('Create Initial Table Structure') }}

{% if config.materializationType == 'view' %}
    CREATE OR REPLACE VIEW "{{ db }}"."{{ sch }}"."{{ node.name }}" AS
    SELECT 
        'PLACEHOLDER' AS placeholder_column,
        'Schema will be inferred during run' AS note
    FROM {{ config.externalTableLocation }}
    WHERE 1=0;
{% elif config.materializationType == 'transient table' %}
    CREATE OR REPLACE TRANSIENT TABLE "{{ db }}"."{{ sch }}"."{{ node.name }}" (
        placeholder_column STRING COMMENT 'Will be replaced with inferred schema during run',
        note STRING COMMENT 'This table structure will be dynamically created'
    );
{% else %}
    CREATE OR REPLACE TABLE "{{ db }}"."{{ sch }}"."{{ node.name }}" (
        placeholder_column STRING COMMENT 'Will be replaced with inferred schema during run',
        note STRING COMMENT 'This table structure will be dynamically created'
    );
{% endif %}