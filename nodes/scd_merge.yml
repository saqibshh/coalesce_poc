fileVersion: 1
id: f47b2a3c-8d15-4f9e-b234-a1b2c3d4e5f6
name: scd_merge
operation:
  config:
    insertStrategy: INSERT
    postSQL: ""
    preSQL: ""
    testsEnabled: true
    truncateBefore: false
    businessKeyColumns:
      - id
  database: ""
  deployEnabled: true
  description: "Implements SCD2 logic with active flag tracking"
  isMultisource: false
  locationName: SRC
  materializationType: table
  metadata:
    appliedNodeTests: []
    columns: []
    cteString: ""
    enabledColumnTestIDs: []
    sourceMapping:
      - customSQL:
          customSQL: |
            WITH changes AS (
              SELECT
                COALESCE(new.id, old.id) AS id,
                new.name AS new_name,
                old.name AS old_name,
                CASE 
                  WHEN old.id IS NULL THEN 'INSERT'
                  WHEN new.id IS NULL THEN 'DELETE'
                  WHEN MD5(TO_JSON(OBJECT_CONSTRUCT('name', new.name))) 
                     != MD5(TO_JSON(OBJECT_CONSTRUCT('name', old.name))) THEN 'UPDATE'
                  ELSE 'NO_CHANGE'
                END AS change_type,
                new.name,
                CURRENT_TIMESTAMP() AS created_at,
                CURRENT_TIMESTAMP() AS updated_at
              FROM {{ ref('SRC', 'TODAYS_DATA') }} AS new
              FULL OUTER JOIN {{ ref('SRC', 'DC_POC') }} AS old
                ON new.id = old.id
               AND old.active = TRUE
            )
            SELECT
              id,
              name,
              TRUE AS active,
              created_at,
              updated_at
            FROM changes
            WHERE change_type IN ('INSERT', 'UPDATE')
        dependencies:
          - locationName: SRC
            nodeName: TODAYS_DATA
          - locationName: SRC
            nodeName: DC_POC
        join:
          joinCondition: ""
        name: scd_merge
        noLinkRefs: []
  name: scd_merge
  overrideSQL: true
  schema: ""
  sqlType: "Dimension"
  type: sql
  version: 1
type: Node